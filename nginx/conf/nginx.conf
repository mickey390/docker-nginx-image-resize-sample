
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  image-resize.localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # ここから ################################################################
        location ~ /images/.*\.jpg$ {
            if ($query_string ~ .*=.*) {
              rewrite ^/images/(.*\.jpg)$ /image_filter/$1 last;
            }
        }

        location ~ ^/image_filter/(.*\.jpg)$ {
            internal;

            set $file $1;
            set $width 150;
            set $height 150;
            set $quality 75;

            if ($arg_width ~ (\d*)) {
                set $width $1;
            }
            if ($arg_height ~ (\d*)) {
                set $height $1;
            }
            if ($arg_quality ~ (100|[1-9][0-9]|[1-9])) {
                set $quality $1;
            }

            if ($arg_type = "resize") {
                rewrite ^ /resize last;
            }

            rewrite ^ /crop last;
        }

        location /resize {
            internal;
            rewrite ^ /images/$file break;
        	#image_filter on;
            image_filter  resize  $width $height;
            image_filter_jpeg_quality $quality;
            error_page 415 = @empty;
        }

        location /crop {
            internal;
            rewrite ^ /images/$file break;
            image_filter  crop  $width $height;
            image_filter_jpeg_quality $quality;
            error_page 415 = @empty;
        }

        location @empty {
            empty_gif;
        }

        # ここまで ###############################################################

    }

}
